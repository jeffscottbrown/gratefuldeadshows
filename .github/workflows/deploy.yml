name: Deploy to Cloud Run

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report@latest
      - name: Install junit-viewer
        run: npm install -g junit-viewer
      - name: Run tests and create JUnit report
        run: |
          mkdir -p reports
          set -o pipefail
          go test -v 2>&1 ./... | tee reports/test-output.txt | go-junit-report > reports/junit-report.xml
          TEST_EXIT_CODE=${PIPESTATUS[0]}
          exit $TEST_EXIT_CODE
      - name: Convert XML to HTML
        if: always()
        run: |
          junit-viewer --results=reports/junit-report.xml --save=reports/report.html
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: go-test-report
          path: reports/report.html

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup Git Commit Info
        run: |
          TAG=${{ github.ref_name }}
          echo "DOCKER_IMAGE_VERSION=${TAG#v}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest,${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{env.DOCKER_IMAGE_VERSION}}
      - name: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Deploy to Cloud Run
        run: gcloud run deploy gratefuldata --image ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{env.DOCKER_IMAGE_VERSION}} --platform managed --region us-central1 --allow-unauthenticated